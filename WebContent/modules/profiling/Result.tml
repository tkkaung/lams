<html t:type="layout" 
	title="View Result Graph"
	currentModule="${moduleName}"
	currentProj="project"
	breadcrumb="${project.encodeddisplayname}=project/home?${project.id}
		,${module.displayName}=modules/profiling/home?${project.id}
		,View Result Graph=modules/profiling/viewscore?${project.id}
		"
	xmlns:t="http://tapestry.apache.org/schema/tapestry_5_1_0.xsd"
   xmlns:p="tapestry:parameter">

<p:actionBtns>
</p:actionBtns>	

<p:legendBlk>
	<div class="legend">
		<div class="title">${message:legend}</div>
		<div class="content">
			<table>
				<tr>
					<td><div class="self_pre" /></td>
					<td class="label">: Self-assessment (Pre)</td>
					<td><div class="self_post" /></td>
					<td class="label">: Self-assessment (Post)</td>
					<td><div class="peer" /></td>
					<td class="label">: Peers-assessment</td>
					<td><div class="instructor" /></td>
					<td class="label">: Supervisor-assessment</td>
					<td><div class="others" /></td>
					<td class="label">: Others-assessment (Peers+Supervisor/2)</td>
					<td><div class="norms" style="width: 25px;" ><t:outputraw value="emptyString"/></div></td>
					<td class="label">Bars : Norms</td>
				</tr>
			</table>
		</div>
	</div>
</p:legendBlk>	

	<table class="actionToolBar">
		<tr>
		<td>
		</td>
		<td class="right">
		</td>
		</tr>
	</table>
		


<div>Student: <span class="studentname">${assessee.getDisplayName()}</span></div>

<div class="resultContainer">
	<div class="wrapper">
		<table id="resultBlk" cellspacing="0" cellpadding="0" style="width:${getTotalWidth()}px;">
			<tr>
				<th rowspan="2" class="dimensionCol" style="width:${getDimColWidth()}px;" ></th>
				<th rowspan="2" class="hiddenCol" ></th>
				<th class="scoreCol" style="width:${getColumnWidth()}px;"><div class="leftspan">0</div>1</th>
				<t:loop source="2..7" value="tempInt">
					<th class="scoreCol" style="width:${getColumnWidth()}px;">${tempInt}</th>
				</t:loop>
			</tr>
			<tr>
				<th><label >Strongly Disagree</label></th>
				<th><label >Disagree</label></th>
				<th><label >Somewhat Disagree</label></th>
				<th><label >Neutral</label></th>
				<th><label >Somewhat Agree</label></th>
				<th><label >Agree</label></th>
				<th><label >Strongly Agree</label></th>
			</tr>

			<t:loop source="ldimIDsOrder" value="dimID">
				<t:if test="dimID">
					<p:else>
						<tr><td ><t:outputraw value="emptyString"/></td>
							<td ><t:outputraw value="emptyString"/></td>
							<t:loop source="1..7" value="tempInt">
								<td class="scoreCol" ><t:outputraw value="emptyString"/></td>
							</t:loop>
						</tr>
					</p:else>
					
					<t:if test="isHeader(dimID)" negate="true">
						<p:else>
							<tr><td style="font-weight:bold;">${getHeader(dimID)}</td>
								<td class="hiddenCol" >
								<div class="chartBarWrapper">
									<div class="chartBar norms" style="left: ${computeWidth(getNormsStartByStyleGroup(getHeader(dimID)))}px; 
										width: ${computeWidth(getNormsWidthByStyleGroup(getHeader(dimID)))}px;
										background:#fbd5b5;"
									>
									<t:outputraw value="emptyString"/>
									</div>
									<div class="chartBar instructor" style="left: ${computeWidth(getAvgStyleGroupInstructor(getHeader(dimID)))}px;">
									<t:outputraw value="emptyString"/>
									</div>
									<div class="chartBar self_pre" style="left: ${computeWidth(getAvgStyleGroupSelfPre(getHeader(dimID)))}px;">
									<t:outputraw value="emptyString"/>
									</div>
									<div class="chartBar self_post" style="left: ${computeWidth(getAvgStyleGroupSelfPost(getHeader(dimID)))}px;">
									<t:outputraw value="emptyString"/>
									</div>
									<div class="chartBar peer" style="left: ${computeWidth(getAvgStyleGroupPeer(getHeader(dimID)))}px;">
									<t:outputraw value="emptyString"/>
									</div>
									<div class="chartBar others" style="left: ${computeWidth(getAvgStyleGroupOthers(getHeader(dimID)))}px;">
									<t:outputraw value="emptyString"/>
									</div>
									
									
								</div>	
							</td>
								<t:loop source="1..7" value="tempInt">
									<td class="scoreCol" ><t:outputraw value="emptyString"/></td>
								</t:loop>
							</tr>
						</p:else>
						
						<tr >
							<td style="background:#${getDimension(dimID).colorCode};">${getDimension(dimID).name}</td>
							<td class="hiddenCol" >
								<div class="chartBarWrapper">
									<div class="chartBar norms" style="left: ${computeWidth(getNormsStart(dimID))}px; 
										width: ${computeWidth(getNormsWidth(dimID))}px;
										background:#${getDimension(dimID).colorCode};"
									>
									<t:outputraw value="emptyString"/>
									</div>
									<div class="chartBar instructor" style="left: ${computeWidth(getAvgInstructor(dimID))}px;">
									<t:outputraw value="emptyString"/>
									</div>
									<div class="chartBar self_pre" style="left: ${computeWidth(getAvgSelfPre(dimID))}px;">
									<t:outputraw value="emptyString"/>
									</div>
									<div class="chartBar self_post" style="left: ${computeWidth(getAvgSelfPost(dimID))}px;">
									<t:outputraw value="emptyString"/>
									</div>
									<div class="chartBar peer" style="left: ${computeWidth(getAvgPeer(dimID))}px;">
									<t:outputraw value="emptyString"/>
									</div>
									<div class="chartBar others" style="left: ${computeWidth(getAvgOthers(dimID))}px;">
									<t:outputraw value="emptyString"/>
									</div>
									
									
								</div>	
							</td>
						  	<t:loop source="1..7" value="tempInt">
								<td class="scoreCol" ><t:outputraw value="emptyString"/></td>
							</t:loop>
							
						</tr>
					</t:if>
				</t:if>
			</t:loop>
			
			
		</table>
				
<table class="columns">
      <tr>
        <td><div id="chart_div1" style="width: 600px; height: 300px;"></div></td>
        <td><div id="chart_div2" style="width: 600px; height: 300px;"></div></td>
      </tr>
      <tr>
        <td><div id="chart_div3" style="width: 600px; height: 300px;"></div></td>
        <td><div id="chart_div4" style="width: 600px; height: 300px;"></div></td>
      </tr>
    </table>


	</div>
</div>



<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
      google.charts.load("current", {packages:["corechart"]});
      google.charts.setOnLoadCallback(drawChart);
      function drawChart() {
        var data1 = google.visualization.arrayToDataTable
            ([['X', 'Peers', 'Supervisor', 'Peers + Supervisor', 'Calibrate line'],
              [${getAvgPeer(getDimID_10PLE())}, ${getAvgSelfPre(getDimID_10PLE())}, null, null, null],
              [${getAvgInstructor(getDimID_10PLE())}, null, ${getAvgSelfPre(getDimID_10PLE())}, null, null],
              [${getAvgOthers(getDimID_10PLE())}, null, null, ${getAvgSelfPre(getDimID_10PLE())}, null],
              [0, null, null, null, 0],
              [7, null, null, null, 7]
              
        ]);

        var options1 = {
	        legend: { position: 'bottom' },
	        title:'Calibration Curve - Perceive Leadership Effectiveness (PRE)',
        	hAxis: { title: 'Accuracy', ticks :[1,2,3,4,5,6,7] },
        	vAxis: { title: 'Confidence (SELF-PRE)',  ticks :[1,2,3,4,5,6,7] },
          pointSize: 15,
          series: {
                0: { pointShape: 'diamond' },
                1: { pointShape: 'circle' },
                2: { pointShape: 'triangle' },
                3: { lineWidth: 1, pointsVisible: false }
            },
            colors: ['${getCalibrationPointColor(getAvgSelfPre(getDimID_10PLE()), getAvgPeer(getDimID_10PLE()))}',
             	'${getCalibrationPointColor(getAvgSelfPre(getDimID_10PLE()), getAvgInstructor(getDimID_10PLE()))}',
             	'${getCalibrationPointColor(getAvgSelfPre(getDimID_10PLE()), getAvgOthers(getDimID_10PLE()))}',
             	 'green']
        };

        var chart = new google.visualization.LineChart(document.getElementById('chart_div1'));
        chart.draw(data1, options1);



        var data2 = google.visualization.arrayToDataTable
            ([['X', 'Peers', 'Supervisor', 'Peers + Supervisor', 'Calibrate line'],
              [${getAvgPeer(getDimID_10PLE())}, ${getAvgSelfPost(getDimID_10PLE())}, null, null, null],
              [${getAvgInstructor(getDimID_10PLE())}, null, ${getAvgSelfPost(getDimID_10PLE())}, null, null],
              [${getAvgOthers(getDimID_10PLE())}, null, null, ${getAvgSelfPost(getDimID_10PLE())}, null],
              [0, null, null, null, 0],
              [7, null, null, null, 7]
              
        ]);

        var options2 = {
	        legend: { position: 'bottom' },
	        title:'Calibration Curve - Perceive Leadership Effectiveness (POST)',
        	hAxis: { title: 'Accuracy', ticks :[1,2,3,4,5,6,7] },
        	vAxis: { title: 'Confidence (SELF-POST)',  ticks :[1,2,3,4,5,6,7] },
          pointSize: 15,
          series: {
                0: { pointShape: 'diamond' },
                1: { pointShape: 'circle' },
                2: { pointShape: 'triangle' },
                3: { lineWidth: 1, pointsVisible: false }
            },
            colors: ['${getCalibrationPointColor(getAvgSelfPost(getDimID_10PLE()), getAvgPeer(getDimID_10PLE()))}',
             	'${getCalibrationPointColor(getAvgSelfPost(getDimID_10PLE()), getAvgInstructor(getDimID_10PLE()))}',
             	'${getCalibrationPointColor(getAvgSelfPost(getDimID_10PLE()), getAvgOthers(getDimID_10PLE()))}', 
             	'green']
        };


        var chart2 = new google.visualization.LineChart(document.getElementById('chart_div2'));
        chart2.draw(data2, options2);
        
        
        
        
        var data3 = google.visualization.arrayToDataTable
            ([['X', 'Transactional', 'Tranformational', 'Leadership Flexibility', 'Calibrate line'],
              [${getAvgStyleGroupPeer(getDimStyleGroup_Transactional())}, ${getAvgStyleGroupSelfPre(getDimStyleGroup_Transactional())}, null, null, null],
              [${getAvgStyleGroupPeer(getDimStyleGroup_Transformational())}, null, ${getAvgStyleGroupSelfPre(getDimStyleGroup_Transformational())}, null, null],
              [${getAvgStyleGroupPeer(getDimStyleGroup_LeadershipFlex())}, null, null, ${getAvgStyleGroupSelfPre(getDimStyleGroup_LeadershipFlex())}, null],
              [0, null, null, null, 0],
              [7, null, null, null, 7]
              
        ]);

        var options3 = {
	        legend: { position: 'bottom' },
	        title:'Calibration Curve - Leadership Styles (PRE)',
        	hAxis: { title: 'Accuracy', ticks :[1,2,3,4,5,6,7] },
        	vAxis: { title: 'Confidence (SELF-PRE)',  ticks :[1,2,3,4,5,6,7] },
          pointSize: 15,
          series: {
                0: { pointShape: 'star' },
                1: { pointShape: 'square' },
                2: { pointShape: 'polygon' },
                3: { lineWidth: 1, pointsVisible: false }
            }
            ,
            colors: ['${getCalibrationPointColor(getAvgStyleGroupSelfPre(getDimStyleGroup_Transactional()), getAvgStyleGroupPeer(getDimStyleGroup_Transactional()))}',
             	'${getCalibrationPointColor(getAvgStyleGroupSelfPre(getDimStyleGroup_Transformational()), getAvgStyleGroupPeer(getDimStyleGroup_Transformational()))}',
             	'${getCalibrationPointColor(getAvgStyleGroupSelfPre(getDimStyleGroup_LeadershipFlex()), getAvgStyleGroupPeer(getDimStyleGroup_LeadershipFlex()))}', 
             	'green']
        };

        var chart3 = new google.visualization.LineChart(document.getElementById('chart_div3'));
        chart3.draw(data3, options3);
        
        
        
        var data4 = google.visualization.arrayToDataTable
            ([['X', 'Transactional', 'Tranformational', 'Leadership Flexibility', 'Calibrate line'],
              [${getAvgStyleGroupPeer(getDimStyleGroup_Transactional())}, ${getAvgStyleGroupSelfPost(getDimStyleGroup_Transactional())}, null, null, null],
              [${getAvgStyleGroupPeer(getDimStyleGroup_Transformational())}, null, ${getAvgStyleGroupSelfPost(getDimStyleGroup_Transformational())}, null, null],
              [${getAvgStyleGroupPeer(getDimStyleGroup_LeadershipFlex())}, null, null, ${getAvgStyleGroupSelfPost(getDimStyleGroup_LeadershipFlex())}, null],
              [0, null, null, null, 0],
              [7, null, null, null, 7]
              
        ]);

        var options4 = {
	        legend: { position: 'bottom' },
	        title:'Calibration Curve - Leadership Styles (POST)',
        	hAxis: { title: 'Accuracy', ticks :[1,2,3,4,5,6,7] },
        	vAxis: { title: 'Confidence (SELF-POST)',  ticks :[1,2,3,4,5,6,7] },
          pointSize: 15,
          series: {
                0: { pointShape: 'star' },
                1: { pointShape: 'square' },
                2: { pointShape: 'polygon' },
                3: { lineWidth: 1, pointsVisible: false }
            }
            ,
            colors: ['${getCalibrationPointColor(getAvgStyleGroupSelfPost(getDimStyleGroup_Transactional()), getAvgStyleGroupPeer(getDimStyleGroup_Transactional()))}',
             	'${getCalibrationPointColor(getAvgStyleGroupSelfPost(getDimStyleGroup_Transformational()), getAvgStyleGroupPeer(getDimStyleGroup_Transformational()))}',
             	'${getCalibrationPointColor(getAvgStyleGroupSelfPost(getDimStyleGroup_LeadershipFlex()), getAvgStyleGroupPeer(getDimStyleGroup_LeadershipFlex()))}', 
             	'green']
        };

        var chart4 = new google.visualization.LineChart(document.getElementById('chart_div4'));
        chart4.draw(data4, options4);
        
      }
    </script>
.


</html>